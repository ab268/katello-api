## ABOUT
Java framework of Katello API/CLI Tests.

## GRADLE USAGE
* Install gradle from http://gradle.org
* Run 'gradle eclipse' to generate the Eclipse files '.classpath' and '.project'
* Because gradle provides dependencies, .classpath and .project SHOULD NOT be checked in.
* If you install the gradle plugin in Eclipse, then you can use 'Convert to Gradle Project', and it will fully manage deps.

## CONFIGURATION
* `cp katello-automation.properties automation.properties`  
  `sed -i "s/^katello.server.hostname\s*=.*$/katello.server.hostname=<your_katello_server_fqdn>/" automation.properties`  
  `sed -i "s/^katello.server.sshkey.private\s*=.*$/katello.server.sshkey.private=<.ssh\/your_private_key>/" automation.properties`  
  `sed -i "s/^katello.client.hostname\s*=.*$/katello.client.hostname=<your_katello_client_fqdn>/" automation.properties`  
  `sed -i "s/^katello.client.sshkey.private\s*=.*$/katello.client.sshkey.private=<.ssh\/your_private_key>/" automation.properties`    
  `sed -i "s/^katello.engine\s*=.*$/katello.engine=<headpin|katello>/" automation.properties # (used for CLI calls)`  
  `sed -i "s/^katello.product\s*=.*$/katello.product=<sam|cfse|katello|headpin>/" automation.properties # (used for API calls)`  
  
  then specify: `-Dautomation.propertiesfile=${WORKSPACE}/automation.properties` in java  

or

* specify  
  `JAVAARGS="${JAVAARGS} -Dkatello.server.hostname=<your_katello_server_fqdn>`  
  `-Dkatello.client.hostname=<your_katello_client_fqdn> -Dkatello.server.sshkey.private=<.ssh\/your_private_key>`  
  `-Dkatello.client.sshkey.private=<.ssh\/your_private_key>`
  `-Dkatello.product=<headpin|katello> -Dkatello.engine=<headpin|katello>"`  
  in java

## JENKINS USAGE
`JAVA_OPTS="-Dtestng.project.dir=$WORKSPACE/katello-api"`  
`JAVA_OPTS="$JAVA_OPTS -Dworkspace.dir=$WORKSPACE/katello-api"`  
`JAVA_OPTS="$JAVA_OPTS -Dorg.uncommons.reportng.escape-output=false"`  
`JAVA_OPTS="$JAVA_OPTS -Dkatello.product=katello"`  
`JAVA_OPTS="$JAVA_OPTS -Dkatello.engine=katello"`  
`JAVA_OPTS="$JAVA_OPTS -Dkatello.server.hostname=$KATELLO_SERVER_HOSTNAME"`  
`JAVA_OPTS="$JAVA_OPTS -Dkatello.client.hostname=$KATELLO_CLIENT_HOSTNAME"`  
`JAVA_OPTS="$JAVA_OPTS -Dkatello.server.sshkey.private=.ssh/id_hudson_dsa"`  
`JAVA_OPTS="$JAVA_OPTS -Dkatello.client.sshkey.private=.ssh/id_hudson_dsa"`  
`JAVA_OPTS="$JAVA_OPTS -Dtestng.testnames=Smoke_Tests,CLI_Tests,E2E_Tests"`  
`JAVA_OPTS="$JAVA_OPTS -Dtestng.excludegroups=openldap"`  

and then run gradle:  
`export JAVA_OPTS && /home/jenkins/gradle-1.0/bin/gradle run_katello`  

## REFERENCES
* _`https://github.com/weissjeffm/webui-framework`_ (**OBSOLETED**)  
* Maven libraries of [RedHatQE](https://github.com/RedHatQE) github repos  
* `lib/reportng-1.1.3.jar:lib/velocity-dep-1.4.jar` are still using statically   
  (there was problem with v1.1.2 finding correct TestNG@jdk15.jar or so; v1.1.3 was not found in .m2-s)  

## EXAMPLES
Some usage samples could be found under: [examples/](https://github.com/gkhachik/katello-api/tree/master/src/examples)

## NOTES

